<tool id="refgenie_fetch_genome" name=" Refgenie reference Genome download" version="0.0.1" profile="20.05">
    <description>fetching</description>
    <requirements>
        <requirement type="package" version="0.9.1">refgenie</requirement>
    </requirements>
    <code file="database_manager_refgenie.py" />
    <command detect_errors="exit_code"><![CDATA[
       #set ga = str($assets).split('/',1)
       refgenie pull -c '$__app__.config.refgenie_config_file' -g '$ga[0]' '$ga[1]' $force >
       ##echo '$ga[0] $ga[1]' >
       '${out_file}'
    ]]></command>
    <inputs>
        <param argument="--assets" name="assets" type="drill_down" display="radio" hierarchy="exact" multiple="False" optional="False" label="list of asset-registry-paths" dynamic_options="galaxy_code_get_refgenie_folders(__trans__.app.config.refgenie_config_file)" help="string of asset-registry-paths"/>
        <param argument="--force" name="force" type="boolean" truevalue="--force" falsevalue="" selected="False" label = "force download" />
    </inputs>
    <outputs>
        <data name="out_file" format="data_manager_json"/>
    </outputs>
    <tests>
        <!-- TODO: need some way to test that new entry was added to data table -->
        <test>
            <param name="genome_config" value="genome_config.yaml"/>
            <param name="genome" value="hg38_chr22"/>
            <param name="assets" value="bwa_index"/>
            <output name="out_file" file="genome_config.yaml"/>
        </test>
    </tests>
    <help>
            **What it does**
            Fetches a reference genome from http://refgenomes.databio.org.
            ------
            .. class:: infomark
            **Notice:** If you leave name, description, or id blank, it will be generated automatically.
    </help>
</tool>
